"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.useRazorpay = void 0;
const React = __importStar(require("react"));
const razorpay_1 = __importDefault(require("./razorpay"));
const NODE_ENV = process.env.NODE_ENV;
const logger = (message, ...args) => {
    if (NODE_ENV === "prod" || NODE_ENV === "production")
        return;
    console.log(`[react-razorpay]:`, message, ...args);
};
const useRazorpay = () => {
    const [isLoading, setIsLoading] = React.useState(false);
    const [error, setError] = React.useState();
    const isClient = typeof window !== "undefined";
    const checkScriptLoaded = () => {
        if (!isClient)
            return false;
        if (!("Razorpay" in window))
            return false;
        return true;
    };
    function loadScript(src) {
        return new Promise((resolve, reject) => {
            const script = window.document.createElement("script");
            script.src = src;
            script.onload = function () {
                resolve();
            };
            script.onerror = function (e) {
                reject(e.toString());
            };
            document.body.appendChild(script);
        });
    }
    React.useEffect(() => {
        logger(`init... (Logs won't appear in production env)`);
        if (!isClient) {
            logger(`server detected! Skipping script loading...`);
            return;
        }
        setIsLoading(true);
        if (!checkScriptLoaded()) {
            logger(`loading script: https://checkout.razorpay.com/v1/checkout.js`);
            loadScript("https://checkout.razorpay.com/v1/checkout.js")
                .then(() => {
                logger(`script loaded success..`);
                setError(undefined);
            })
                .catch((err) => {
                logger(`script loading error`, err);
                if (err instanceof Error) {
                    setError(err.message);
                }
                else {
                    setError(`Unknown Error`);
                }
            })
                .finally(() => setIsLoading(false));
        }
    }, []);
    return { error, isLoading, Razorpay: razorpay_1.default };
};
exports.useRazorpay = useRazorpay;
//# sourceMappingURL=index.js.map